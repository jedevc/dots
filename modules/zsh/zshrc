# history
setopt INC_APPEND_HISTORY HIST_IGNORE_DUPS
HISTFILE=~/.histfile
HISTSIZE=2000
SAVEHIST=1000000000

# keybindings
set -o vi
bindkey -v '^?' backward-delete-char
bindkey -v '^H' backward-delete-char
bindkey -v '^[[3~' delete-char

# history search
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey '^[[A' history-beginning-search-backward-end
bindkey '^[[B' history-beginning-search-forward-end
bindkey -a 'k' history-beginning-search-backward-end
bindkey -a 'j' history-beginning-search-forward-end
bindkey -a '/' history-incremental-pattern-search-backward
bindkey '^R' history-incremental-search-backward

# delay fix
export KEYTIMEOUT=1

# fg widget
function fg_function { fg }
zle -N fg_widget fg_function
bindkey '^F' fg_widget

# pushd
setopt AUTO_PUSHD PUSHD_IGNORE_DUPS PUSHD_MINUS PUSHD_TO_HOME

# autocompletion
autoload -Uz compinit
compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true
zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|=*' 'l:|=* r:|=*'
setopt COMPLETE_ALIASES

# colors
autoload -U colors && colors
alias ls='ls --color=auto'
alias grep='grep --color=auto'

# prompt
PROMPT="%F{blue}%1~%f %% "
if [[ $DISPLAY ]]; then
	# find powerlevel
	if [[ -f ~/powerlevel10k/powerlevel10k.zsh-theme ]]; then
		# 10k (user location)
		source ~/powerlevel10k/powerlevel10k.zsh-theme
		USE_10K=true
	elif [[ -f /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme ]]; then
		# 10k (installed location)
		source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
		USE_10K=true
	elif [[ -f /usr/share/powerlevel10k/powerlevel10k.zsh-theme ]]; then
		# 10k (alternative installed location)
		source /usr/share/powerlevel10k/powerlevel10k.zsh-theme
		USE_10K=true
	fi

	if [[ -n $USE_10K ]] && [[ -f ~/.p10k.zsh ]]; then
		source ~/.p10k.zsh
	fi
fi

# find zsh-syntax-highlighting
if [[ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
	source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
elif [[ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
	source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# find zsh-autosuggestions
if [[ -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
	source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
	ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=40
	ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-beginning-search-backward-end history-beginning-search-forward-end)
elif [[ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
	source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
	ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=40
	ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-beginning-search-backward-end history-beginning-search-forward-end)
fi

# find fzf
if [[ -f /usr/share/fzf/completion.zsh ]]; then
	source /usr/share/fzf/completion.zsh
elif [[ -f /usr/share/doc/fzf/examples/completion.zsh ]]; then
	source /usr/share/doc/fzf/examples/completion.zsh
fi
if [[ -f /usr/share/fzf/key-bindings.zsh ]]; then
	source /usr/share/fzf/key-bindings.zsh
elif [[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]]; then
	source /usr/share/doc/fzf/examples/key-bindings.zsh
fi

# window title (borrowed from ArchWiki)
autoload -Uz add-zsh-hook
function xterm_title_precmd () {
	print -Pn '\e]2;%n@%m %1~\a'
}
function xterm_title_preexec () {
	print -Pn '\e]2;%n@%m %1~ %# '
	print -n "${(q)1}\a"
}
if [[ "$TERM" == (screen*|xterm*|rxvt*) ]]; then
	add-zsh-hook -Uz precmd xterm_title_precmd
	add-zsh-hook -Uz preexec xterm_title_preexec
fi

# direnv
if command -v direnv &> /dev/null; then
	eval "$(direnv hook zsh 2>/dev/null)"
fi

# aliases
if command -v nvim &> /dev/null; then
	alias vim="nvim"
fi

# stop ctrl-s
stty -ixon
